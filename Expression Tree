**Given a simple expression tree, which is also a full binary tree consisting of basic binary operators i.e., + , â€“ ,* and / and some 
integers, Your task is to evaluate the expression tree **

int funct(string s)
{
    int num=0;
    num=s[0]-'0';
    for(int i = 1 ; i < s.length() ; i++ )
    {
        num= num*10+s[i]-'0';
    }
    return num;
}
int evalTree(node* root)
{
    if(root==NULL)
    return 0;
    if(root->data!="*"&&root->data!="+"&&root->data!="-"&&root->data!="/")
    {
        return funct(root->data);
    }
    if(root->data=="*")
    {
        return evalTree(root->left)*evalTree(root->right);
    }else if(root->data=="+")
    {
        return evalTree(root->left)+evalTree(root->right);
    }else if(root->data=="-")
    {
        return (evalTree(root->left)-evalTree(root->right));
    }else 
    {
        int x=evalTree(root->right);
        int y=evalTree(root->left);
        if(y==0)
        return 0;
        return x/y;
    }
}
