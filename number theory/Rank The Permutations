**Given a string, find the rank of the string amongst its permutations sorted lexicographically. 
Return 0 if the characters are repeated in the string.

For example:

Input : 'acb'
Output : 2

The order permutations with letters 'a', 'c', and 'b' : 
abc
acb
bac
bca
cab
cba**********

        long long int findsmallnumbers(string s, int i)
        {
            long long int cnt=0;
            for(int j = i ; j < s.length() ; j++)
            {
                if(s[i-1]>s[j])
                {
                    cnt=((cnt%mod)+1%mod)%mod;
                }
            }
            return cnt;
        }
        long long int fact(int x)
        {
            long long int cnt=1;
            for(int i=x;i>=2;i--)
            {
                cnt=((cnt%mod)*(i%mod))%mod;
            }
            return cnt;
        }
        int main() 
        {
          int t ;
          cin >> t ;
          while(t--)
          {
              string s;
              cin >> s ;
              long long int ans=1;
              int h[26]={0};
              for(int i = 0 ; i < s.length(); i++)
              {
                  if(h[s[i]-'a']==1)
                  {
                      ans=0;
                      break;
                  }
                  h[s[i]-'a']=1;
                  int cnt=findsmallnumbers(s,i+1);
                  ans=(ans%mod+((cnt%mod)*(fact(s.length()-i-1)%mod))%mod)%mod;
              }

              cout<<ans<<endl;
          }
          return 0;
        }
