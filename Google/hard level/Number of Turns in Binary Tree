**Given a binary tree and data value of two of its nodes. Find the number of turns needed to reach from one node to another in the given 
binary tree. If the two nodes are in a straight line, ie- the path does not involve any turns, return -1.**

      struct Node *findLCA(struct Node* root, int n1, int n2) 
      { 
          if (root == NULL) return NULL; 
         if (root->data == n1 || root->data == n2) 
              return root; 

         Node *left_lca  = findLCA(root->left, n1, n2); 
          Node *right_lca = findLCA(root->right, n1, n2); 

           if (left_lca && right_lca)  return root; 

          return (left_lca != NULL)? left_lca: right_lca; 
      } 
      int turns(struct Node* root, int dataa, int flag, int &cnt)
      {
          if(root==NULL)
          return 0;
          if(root->data==dataa)
          return 1;
          if(flag==0)
          {
              if(turns(root->left, dataa, flag, cnt))
              {
                  return 1;
              }
              if(turns(root->right, dataa, !flag, cnt))
              {
                  cnt++;
                  return 1;
              }
          }else
          {
              if(turns(root->right, dataa, flag, cnt))
              {
                  return 1;
              }
              if(turns(root->left, dataa, !flag, cnt))
              {
                  cnt++;
                  return 1;
              }
          }
          return 0;
      }
      int NumberOFTurns(struct Node* root, int first, int second)
      {
            Node *lca = findLCA(root,first,second);
            int cnt=0;
            if(lca->data==first)
            {
                turns(lca->left,second,0,cnt);
                turns(lca->right,second,1,cnt);
            }else if(lca->data==second)
            {
                turns(lca->right,first,1,cnt);
                turns(lca->left,first,0,cnt);
            }else
            {
                cnt=1;
               if(turns(lca->right,second,1,cnt)||turns(lca->left,second,0,cnt));
               if(turns(lca->right,first,1,cnt)||turns(lca->left,first,0,cnt));
            }
            return cnt;
      }
