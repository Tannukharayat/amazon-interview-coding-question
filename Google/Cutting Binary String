Given a string s containing 0's and 1's. You have to return a smallest positive integer C, such that the binary string can be cut into C pieces and each piece should be of the 
power of 5  with no leading 
zeros.

      long long int ispowerof5s(string s , int l , int r)
{
    long long int num=0, count=0;
    for(int i = r  ; i >=  l ; i--)
    {
        num=num+ pow(2,count)*(s[i]-'0');
        count++;
    }
   // cout<<l<<" "<<r<<" "<<num<<endl;
    while(num>1)
    {
        if(num%5==0)
        num=num/5;
        else return 0;
    }
    return 1;
}
int cutting_b_tree(string s, int l, int r, int count)
{
    if(l>r)
    return INT_MAX;
    if(s[l]=='0')
    return INT_MAX;
    if(ispowerof5s(s,l,s.length()-1))
    {
        return count+1;
    }
    int mn = INT_MAX;
    for(int i = l ; i <= r ; i++)
    {
        if(ispowerof5s(s, l , i) )
        {
          // cout<<l<<" "<<i<<endl;
            mn = min(cutting_b_tree(s, i+1 , r, count+1), mn);
        }
    }
    return mn;
}
