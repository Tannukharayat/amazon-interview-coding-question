**Given an input string and a dictionary of words, find out if the input string can be segmented into a space-separated sequence of dictionary words. See following examples for more details.

Consider the following dictionary
{ i, like, sam, sung, samsung, mobile, ice,
  cream, icecream, man, go, mango}

Input:  ilike
Output: Yes **

      #include <iostream>
      #include <map>
      using namespace std;
      int funct(string s , map<string, int> mp , int index)
      {
          if(index==s.length())
          {
              return 1;
          }
          for(int i = index ; i < s.length() ; i++)
          {
              if(mp[s.substr(index,i-index+1)]==1)
              {
                  return funct(s,mp,i+1);
              }
          }
          return 0;
      }
      int main() 
      {
        int t ;
        cin >> t ;
        while(t--)
        {
            int n ;
            cin >> n;
            string s;
            map<string, int> mp;
            for(int i = 0 ; i < n ; i++ )
            {
                cin >> s;
                mp[s]=1;
            }
            cin >> s ;
            if(funct(s , mp, 0)==1)
            cout<<"1"<<endl;
            else cout<<"0"<<endl;
        }
        return 0;
      }
