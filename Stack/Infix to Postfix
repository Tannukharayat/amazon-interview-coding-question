**Given an infix expression in the form of a string str. Conver this infix expression to postfix expression.

Infix expression: The expression of the form a op b. When an operator is in-between every pair of operands.
Postfix expression: The expression of the form a b op. When an operator is followed for every pair of operands **

    #include <iostream>
    #include <stack>
    using namespace std;

    int prece(char ch)
    {
        if(ch=='^')
        return 10;
        if(ch=='*'||ch=='/')
        {
            return 9;
        }
        else if(ch=='+'||ch=='-')
        {
            return 8;
        }return 7;
    }
    int main() 
    {
      int t ;
      cin >> t ;
      while(t--)
      {
          string s;
          cin >> s ;
          int k = 0 ;
          stack<int> st;
          char postfix[100];
          for(int i = 0 ; i < s.length() ; i++)
          {
              if(isalnum(s[i]))
              {
                  postfix[k++]=s[i];
              }else if(s[i]=='(')
              {
                  st.push(s[i]);
              }else if(s[i]==')')
              {
                  while(!st.empty()&&st.top()!='(')
                  {
                      postfix[k++]=st.top();
                      st.pop();
                  }
                  st.pop();
              }else 
              {
                  while(!st.empty()&&prece(st.top())>= prece(s[i]))
                  {
                      postfix[k++]=st.top();
                      st.pop();
                  }
                  st.push(s[i]);
              }
          }
          while(!st.empty())
          {
              postfix[k++]=st.top();
              st.pop();
          }
          for(int i = 0 ; i < k ; i++)
          cout<<postfix[i];
          cout<<endl;
      }
      return 0;
    }
