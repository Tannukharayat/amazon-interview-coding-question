**Given a string S, find length of the longest substring with all distinct characters.  For example, for input "abca", the output is 3 as 
"abc" is the longest substring with all distinct characters.**

      int main() 
      {
          int t ;
          cin >> t ;
          while(t--)
          {
              string s;
              cin >> s;
              int h[26]={0};
              for(int i = 0 ; i < 26 ; i++)
              h[i]=-1;
              int cnt = 0 , ans = 0, st = 0;
              for(int i = 0 ; i < s.length() ; i++)
              {
                  if(h[s[i]-'a']==-1)
                  {
                      h[s[i]-'a']=i;
                      cnt++;
                  }else 
                  {
                      int nxt=h[s[i]-'a']+1;
                      for(int j = st ; j <= h[s[i]-'a'] ; j++)
                      {
                          h[s[j]-'a']=-1;
                          cnt--;
                      }
                   st=nxt;
                   h[s[i]-'a']=i;
                   cnt++;
                  }
                  ans=max(ans,cnt);
              }
              cout<<ans<<endl;
          }

        return 0;
      }
      
      
      Efficient approach:- 
      
      int main() 
      {
          int t ;
          cin >> t ;
          while(t--)
          {
              string s;
              cin >> s;
              int h[26]={0};
              for(int i = 0 ; i < 26 ; i++)
              h[i]=-1;
              int cnt = 0 , ans = 0, st = 0;
              for(int i = 0 ; i < s.length() ; i++)
              {
                   int prev=h[s[i]-'a'];
                  if(h[s[i]-'a']==-1||i-cnt>prev)
                  {
                      h[s[i]-'a']=i;
                      cnt++;
                  }else 
                  {
                    ans = max(ans,cnt);
                    cnt=i-prev;
                    h[s[i]-'a']=i;
                  }
                  ans=max(ans,cnt);
              }
              cout<<ans<<endl;
          }

        return 0;
      }


