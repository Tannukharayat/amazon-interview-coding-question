**Given a snake and ladder board of order 5x6, find the minimum number of dice throws required to reach the destination or last cell (30th
cell) from source (1st cell)**

int main() 
    {
      int t;
      cin >> t ;
      while(t--)
      {
          int n , a , b;
          cin >> n ;
          int h[1000]={0};
          for(int i = 0 ; i < n ; i++)
          {
              cin>>a>>b;
              h[a]=b;
          }
          queue<pair<int,int> >q;
          q.push({1,0});
          pair<int,int> p1;
          while(!q.empty())
          {
                p1=q.front();
                q.pop();
                if(p1.first==30)
                break;
                for(int i = 1 ; i <= 6 ; i++ )
                {
                    if(h[p1.first+i]==0)
                    q.push({p1.first+i,p1.second+1});
                    else
                    q.push({h[p1.first+i],p1.second+1});
                }
          }
          cout<<p1.second<<endl;
      }
      return 0;
    }
