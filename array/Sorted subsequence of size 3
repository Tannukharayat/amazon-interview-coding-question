**Given an array A of N integers, Your task is to complete the function find3Numbers which finds any 3 elements in it such that
A[i] < A[j] < A[k] and i < j < k. You need to return them as a vector, if no such element is present then return the empty 
vector of size 0.**

METHOD 1(O(N),O(N) SPACE)

      vector<int> find3Numbers(vector<int> arr, int N)
      {
           int small[N]={0}, greater[N]={0};
           int min=0, max=N-1;
           vector<int> v;
           small[0]=greater[N-1]=-1;
           for(int i = 1 ; i < N  ; i++)
           {
               if(arr[min]>=arr[i])
               {
                   min=i;
                   small[i]=-1;
               }else small[i]=min;
           }
           for(int i = N-2 ; i >= 0  ; i--)
           {
               if(arr[max]<=arr[i])
               {
                   max=i;
                   greater[i]=-1;
               }else greater[i]=max;
           }
           for(int i = 0 ; i < N ; i++)
           {
               if(small[i]!=-1&&greater[i]!=-1)
               {
                   v.push_back(arr[small[i]]);
                   v.push_back(arr[i]);
                   v.push_back(arr[greater[i]]);
                   return v;
               }
           }
           return v;
}

METHOD 2 (O(N), O(1)SPACE)

        vector<int> find3Numbers(vector<int> arr, int N)
        {
             int small=INT_MAX, large=INT_MAX;
             vector<int>v;
             int i = 0;
             for(i = 0 ; i < N  ; i++)
             {
                 if(arr[i]<=small)
                 small=arr[i];
                 else if(arr[i]<=large) //we will reach this point at which number > small
                 large=arr[i];
                 else break; // we will reach thi pouint if arr[i]>small&&arr[i]>large
             }
             if(i==N)
             return v;
             for(int j = 0 ; j < i  ; j++)
             {
                 if(arr[j]<large)
                 {
                     small=arr[j];
                      v.push_back(small);
                     v.push_back(large);
                     v.push_back(arr[i]);
                     return v;
                 }
             }
        }
