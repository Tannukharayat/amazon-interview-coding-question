**The cost of stock on each day is given in an array A[] of size N. Find all the days on which you buy and sell the stock so that in 
between those days your profit is maximum.**


      int main() 
      {
        int t ;
        cin >> t ;
        while(t--)
        {
            int n ;
            cin >> n ;
            int a[n];
            for(int i = 0 ; i < n ; i++)
            {
                cin >> a[i];
            }
            int i = 0 ;
            vector<pair<int,int> >v;
            while(i<n)
            {

                while(a[i+1]<a[i]&&i+1<n)
                i++;
                if(i>n)
                break;
                 int j = i;
                while(a[i+1]>a[i]&&i+1<n)
                i++;
                if(j<i)
                {
                    if(i>=n)
                    {
                    v.push_back({j,n-1});
                    break;
                    }else  v.push_back({j,i});
                }
                i++;
            }
            if(v.size()==0)
            {
                cout<<"No Profit"<<endl;
                continue;
            }
            for(int i = 0 ; i < v.size() ; i++)
            {
                cout<<"(";
                cout<<v[i].first<<" "<<v[i].second;
                cout<<") ";
            }cout<<endl;
        }
        return 0;
      }
