**Given an array arr[] of N non-negative integers representing height of blocks at index i as Ai where the width of each block is 1. 
Compute how much water can be trapped in between blocks after raining***

        int main() 
        {
            int t ;
            cin >> t ;
            while(t--)
            {
                int n , x , ans = 0;
                cin >> n ;
                int a[n];
                for(int i = 0 ; i < n ; i++)
                {
                    cin >> a[i];
                }int left[n],right[n];
                left[0]=0;
                right[n-1]=0;
                for(int i = 1 ; i < n ; i++)
                {
                    left[i]=max(a[i-1],left[i-1]);
                }
                for(int i = n-2 ; i >= 0 ; i-- )
                {
                    right[i]=max(a[i+1],right[i+1]);
                }
                for(int i = 0 ; i < n; i++)
                {
                    if(min(left[i],right[i])>a[i])
                    ans+=(min(left[i],right[i])-a[i]);
                }
                cout<<ans<<endl;
            }
          return 0;
        }
