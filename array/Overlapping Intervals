 **Given a collection of Intervals,merge all the overlapping Intervals.
For example:

Given [1,3], [2,6], [8,10], [15,18],

return [1,6], [8,10], [15,18].

Make sure the returned intervals are sorted.**

          bool comp(pair<int,int> p1, pair<int,int> p2)
          {
              if(p1.first<p2.first)
              return 1;
              if(p1.first>p2.first)
              return 0;
              if(p1.first==p2.first)
              {
                  if(p1.second<p2.second)
                  return 1;
                  else return 0;
              }
          }
          int main() 
          {
            int t ;
            cin >> t ;
            while(t--)
            {
                int n ;
                cin >> n ;
                int a[n];
                vector<pair<int,int> >v;
                for(int i = 0 ; i < n ; i++)
                {
                    int x, y ;
                    cin >> x >> y ;
                    v.push_back({x,y});
                }
                sort(v.begin(), v.end(), comp);
                vector<pair<int,int> >vect;
                for(int i = 0 ; i < n ; i++)
                {
                    int x = v[i].first, y = v[i].second;
                    int j = i+1;
                   while(x==v[j].first&&j<n)
                   {
                         y=max(v[j].second,v[i].second);
                       j++;
                   }
                   while(y>=v[j].first&&j<n)
                   {
                       y=max(y,v[j].second);
                       j++;
                   } 
                   vect.push_back({x,y});
                   i=j-1;
                }
               for(int i = 0 ; i < vect.size() ; i++)
                {
                    cout<<vect[i].first<<" "<<vect[i].second<<" ";
                }cout<<endl;
            }
            return 0;
          }
