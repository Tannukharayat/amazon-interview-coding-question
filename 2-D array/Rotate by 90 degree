**Given a square matrix mat[][] of size N x N. The task is to rotate it by 90 degrees in anti-clockwise direction without using any extra 
space.**

        int main() 
        {
          int t ;
          cin >>  t ;
          while(t--)
          {
              int n ;
              cin >> n ;
              int a[n][n];
              for(int i = 0 ; i < n ; i++)
              {
                  for(int j = 0 ; j < n ; j++)
                  {
                      cin >> a[i][j];
                  }
              }
              for(int i = 0 ; i < n/2 ; i++)
              {
                  for(int j = i ; j < n-i-1 ; j++)
                  {
                      int tmp=a[i][j];
                      a[i][j]=a[j][n-1-i];
                      a[j][n-1-i]=a[n-1-i][n-1-j];
                      a[n-1-i][n-1-j]=a[n-1-j][i];
                      a[n-1-j][i]=tmp;
                  }
              }
              for(int i = 0 ; i < n ; i++)
              {
                  for(int j = 0 ; j < n ; j++)
                  {
                      cout<<a[i][j]<<" ";
                  }
              }cout<<endl;
          }
          return 0;
        }
        
        
        
        
        int main() 
{
	int t ;
	cin >>  t ;
	while(t--)
	{
	    int n ;
	    cin >> n ;
	    int a[1000][1000];
	    for(int i = 0 ; i < n ; i++)
	    {
	        for(int j = 0 ; j < n ; j++)
	        {
	            cin >> a[i][j];
	        }
	    }
	    for(int i = 0 ; i < n ; i++)
	    {
	        for(int j = i ; j < n ; j++)
	        {
	            int tmp=a[i][j];
	            a[i][j]=a[j][i];
	            a[j][i]=tmp;
	        }
	    }
	    for(int i = 0; i < n ; i++)
	    {
	        for(int j = 0 ; j < n/2 ; j++)
	        {
	            int tmp=a[j][i];
	            a[j][i]=a[n-1-j][i];
	            a[n-1-j][i]=tmp;
	        }
	    }
	  for(int i = 0 ; i < n ; i++)
	    {
	        for(int j = 0 ; j < n ; j++)
	        {
	            cout<<a[i][j]<<" ";
	        }
	    }cout<<endl;
	}
	return 0;
}
