**Given a String, find the longest palindromic subsequence**

    int main() 
    {
      int t ;
      cin >> t ;
      while(t--)
      {
          string s;
          cin >> s ;
          string s1=s;
          reverse(s1.begin(),s1.end());
          int dp[s.length()+1][s.length()+1];
          memset(dp,0,sizeof(dp));
          for(int i = 0 ; i <= s.length() ; i++)
          {
              for(int j = 0 ; j <= s.length() ; j++)
              {
                  if(i==0||j==0)
                  {
                      dp[i][j]=0;
                  }else
                  {
                      if(s[i-1]==s1[j-1])
                      {
                          dp[i][j]=dp[i-1][j-1]+1;
                      }else dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
                  }
              }
          }
          cout<<dp[s.length()][s.length()]<<endl;
      }
      return 0;
    }
