 **Given an input stream of n integers, find the kth largest element for each element in the stream.**

       void min_heap(int a[], int k, int n)
        {
                    int curr=k;
                    if(2*k+1<n&&a[2*k+1]<a[curr])
                    {
                        curr=2*k+1;
                    }
                     if(2*k+2<n&&a[2*k+2]<a[curr])
                    {
                        curr=2*k+2;
                    }   
                    if(curr!=k)
                    {
                        swap(a[k],a[curr]);
                        min_heap(a,curr,n);
                    }

        }
        void build_min_heap(int a[], int n)
        {
                    for(int k = (n/2)-1 ; k >= 0 ; k--)
                    {
                        min_heap(a,k,n);
                    }
        }
        int main()
        {
            int t;
            cin >> t ;
            while(t--)
            {
                int k , n; 
                cin >> k >> n ;
                int a[n];
                for(int i = 0 ; i < n ; i++)
                {
                    cin >>a[i];
                    if(i+1<k)
                    {
                        cout<<"-1"<<" ";
                    }else
                    if(i+1==k)
                    {
                         build_min_heap(a,k);
                         cout<<a[0]<<" ";
                    }else
                    {
                        if(a[i]>a[0])
                        {
                            a[0]=a[i];
                            min_heap(a,0,k);
                        }
                        cout<<a[0]<<" ";
                    }
                }
               cout<<endl;
            }
        }
