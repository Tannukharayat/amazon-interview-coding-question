int reachTarget(int target) 
{ 
    // Handling negatives by symmetry 
    target = abs(target); 
      
    // Keep moving while sum is smaller or difference 
    // is odd. 
    int sum = 0, step = 0; 
    while (sum < target || (sum - target) % 2 != 0) { 
        step++; 
        sum += step; 
    } 
    return step; 
} 
  
  
  int steps(int source, int step, int dest) 
{ 
    // base cases 
    if (abs(source) > (dest))  
         return INT_MAX; 
    if (source == dest) return step; 
  
    // at each point we can go either way 
  
    // if we go on positive side 
    int pos = steps(source + step + 1,  
                      step + 1, dest); 
  
    // if we go on negative side 
    int neg = steps(source - step - 1, 
                      step + 1, dest); 
  
    // minimum of both cases 
    return min(pos, neg); 
} 

or we can calculate sum by using quardratic equation
