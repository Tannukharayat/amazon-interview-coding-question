**A top secret message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
You are an FBI agent. You have to determine the total number of ways that message can be decoded.
Note: An empty digit sequence is considered to have one decoding. It may be assumed that the input contains valid digits from 0 to 9 and If there are leading 0’s, extra trailing 0’s and two or more consecutive 0’s then it is an invalid string.

Example :
Given encoded message "123",  it could be decoded as "ABC" (1 2 3) or "LC" (12 3) or "AW"(1 23).
So total ways are 3.**

          int funct(string s , int n)
          {
              if(n==0||n==1)
              return 1;
              if(s[0]=='0')
              return 0;
              int count=0;
              if(s[n-1]!='0')
              count=funct(s,n-1);
              if(s[n-2]=='1'||(s[n-2]=='2'&&s[n-1]>='1'&&s[n-1]<='6'))
              count+=(funct(s,n-2));
              return count;
          }
          int main() 
          {
            int t ;
            cin >> t ;
            while(t--)
            {
                int n ;
                cin >> n ;
                string s;
                cin >> s ;
                cout<<funct(s,n)<<endl;
            }
            return 0;
          }
