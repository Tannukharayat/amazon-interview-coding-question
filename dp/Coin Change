**Given a value N, find the number of ways to make change for N cents, if we have infinite supply of each of S = { S1, S2, .. , Sm} valued 
coins. The order of coins doesnâ€™t matter. For example, for N = 4 and S = {1,2,3}, there are four solutions: {1,1,1,1},{1,1,2},{2,2},{1,3}. 
\So output should be 4. For N = 10 and S = {2, 5, 3, 6}, there are five solutions: {2,2,2,2,2}, {2,2,3,3}, {2,2,6}, {2,3,5} and {5,5}. So 
the output should be 5.**

          {
            int t;
            cin >> t ;
            while(t--)
            {
                int n ;
                cin >> n ;
                int a[n], h[1000];
                for(int i = 0 ; i < n ; i++)
                {
                    cin >> a[i];
                }
             //   sort(a,a+n);
                int dp[1001][1001]={0};
                int x ;
                cin >> x;
                for(int i = 0 ; i <= n ; i++)
                {
                   for(int j = 0 ; j <= x ; j++)
                   {
                       if(j==0)
                       {
                           dp[i][j]=1;
                       }else if(i==0)
                       {
                           dp[i][j]=0 ;
                       }else if(j >= a[i-1])
                       {
                           dp[i][j]=(dp[i][j-a[i-1]]+dp[i-1][j]);
                       }else dp[i][j]=dp[i-1][j];
                   }
                }
                cout<<dp[n][x]<<endl;
            }
            return 0;
          }
