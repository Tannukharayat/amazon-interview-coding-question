**Given an array of integers A and a sum B, find all unique combinations in A where the sum is equal to B.
each number in A may only be used once in the combination.


        void funct(int a[], int n , int sum , vector<int> &v , int s, int &ans)
        {
            if(sum==0)
            {
                sort(v.begin(),v.end());
                ans = 1;
                cout<<"(";
                for(int i = 0 ; i <  v.size() ; i++)
                {
                    cout<<v[i];
                    if(i!=v.size()-1)
                    cout<<" ";
                }cout<<")";
                return;
            }else if(sum<0||n<0)
            return;
            v.push_back(a[n]);
            funct(a,n-1,sum-a[n], v, s, ans);
            v.pop_back();
            while(a[n]==a[n-1])
            n--;
            funct(a,n-1,sum,v, s,ans);
        }
        int main() 
        {
          int t ;
          cin >> t ;
          while(t--)
          {
              int n , sum;
              cin >> n ;
              int a[n];

              for(int i = 0 ; i < n ;i++)
              cin >> a[i];
              sort(a,a+n);
              cin >> sum;
              vector<int> v;
              int ans = 0 ;
              funct(a,n-1,sum,v, n, ans);
              if(ans==0)
              cout<<"Empty";
              cout<<endl;
          }
          return 0;
        }
