**The problem is to count all the paths from top left to bottom right of a MxN matrix with the constraints that from each cell you can
either move to right or down **

    int main() 
    {
      int t;
      cin >> t ; 
      for( int i = 0 ; i < t ; i++ )
      {
          int n , m ;
          cin >> n >> m ;
          int dp[n][m];
          for(int j = 0 ; j < n ; j++ )
          {
              dp[j][0]=1;
          }
          for(int j = 0 ; j < m ; j++ )
          {
              dp[0][j] = 1 ;
          }
          dp[0][0]=0;
          for(int j = 1 ; j < n ; j++ )
          {
              for(int k = 1 ; k < m ; k++ )
              {
                  dp[j][k] = dp[j-1][k]+dp[j][k-1];
              }
          }
          cout<<dp[n-1][m-1]<<endl;
      }
      return 0;
    }
