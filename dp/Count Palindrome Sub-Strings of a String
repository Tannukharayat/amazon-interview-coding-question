**Given a string, the task is to count all palindromic sub-strings present in it**

        while(t--)
          {
              int n ;
              cin >> n ;
              string s;
              cin >> s;
              int dp[n+1][n+1]={0};
              for(int gap=0; gap < n ; gap++)
              {
                  for(int i = 1 ; i+gap <= n ; i++)
                  {
                     // cout<<i<<" "<<i+gap<<endl;
                      if(gap==0)
                      dp[i][i+gap]=1;
                      else if(gap==1)
                      {
                          if(s[i-1]==s[i+gap-1])
                          {
                              dp[i][i+gap]=1;
                          }else dp[i][i+gap]=0;
                      }else
                      {
                          if(s[i-1]==s[i+gap-1]&&dp[i+1][i+gap-1]==1)
                          {
                              dp[i][i+gap]=1;
                          }else dp[i][i+gap]=0;
                      }
                      //cout<<i<<" "<<i+gap<<endl;
                  }
              }
              int cnt = 0;
              for(int i = 1 ; i <= n ; i++)
              {
                  for(int j = i ; j <= n ; j++)
                  {
                      if(dp[i][j]==1)
                      cnt++;
                  }
              }
              cout<<cnt-s.length()<<endl;
          }
