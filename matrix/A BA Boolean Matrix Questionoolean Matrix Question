Given a boolean matrix mat[M][N] of size M X N, modify it such that if a matrix cell mat[i][j] is 1 (or true) then make all the cells of ith row and jth column as 1.
Example 1
The matrix
1 0
0 0
should be changed to following
1 1
1 0

Example 2
The matrix
0 0 0
0 0 1
should be changed to following
0 0 1
1 1 1

Example 3
The matrix
1 0 0 1
0 0 1 0
0 0 0 0
should be changed to following
1 1 1 1
1 1 1 1
1 0 1 1


    void modifyMatrix(bool mat[R][C]) 
    { 
        bool row[R]; 
        bool col[C]; 

        int i, j; 

        /* Initialize all values of row[] as 0 */
        for (i = 0; i < R; i++) 
        { 
        row[i] = 0; 
        } 

        /* Initialize all values of col[] as 0 */
        for (i = 0; i < C; i++) 
        { 
        col[i] = 0; 
        } 

        // Store the rows and columns to be marked as 
        // 1 in row[] and col[] arrays respectively 
        for (i = 0; i < R; i++) 
        { 
            for (j = 0; j < C; j++) 
            { 
                if (mat[i][j] == 1) 
                { 
                    row[i] = 1; 
                    col[j] = 1; 
                } 
            } 
        } 

        // Modify the input matrix mat[] using the  
        // above constructed row[] and col[] arrays 
        for (i = 0; i < R; i++) 
        { 
            for (j = 0; j < C; j++) 
            { 
                if ( row[i] == 1 || col[j] == 1 ) 
                { 
                    mat[i][j] = 1; 
                } 
            } 
        } 
    }
    Time Complexity: O(M*N)
    Auxiliary Space: O(M + N)
    
    void modifyMatrix(int mat[R][C]) 
        { 
            // variables to check if there are any 1 
            // in first row and column 
            bool row_flag = false; 
            bool col_flag = false; 

            // updating the first row and col if 1 
            // is encountered 
            for (int i = 0; i < R; i++) { 
                for (int j = 0; j < C; j++) { 
                    if (i == 0 && mat[i][j] == 1) 
                        row_flag = true; 

                    if (j == 0 && mat[i][j] == 1) 
                        col_flag = true; 

                    if (mat[i][j] == 1) { 

                        mat[0][j] = 1; 
                        mat[i][0] = 1; 
                    } 
                } 
            } 

            // Modify the input matrix mat[] using the 
            // first row and first column of Matrix mat 
            for (int i = 1; i < R; i++) { 
                for (int j = 1; j < C; j++) { 

                    if (mat[0][j] == 1 || mat[i][0] == 1) { 
                        mat[i][j] = 1; 
                    } 
                } 
            } 

            // modify first row if there was any 1 
            if (row_flag == true) { 
                for (int i = 0; i < C; i++) { 
                    mat[0][i] = 1; 
                } 
            } 

            // modify first col if there was any 1 
            if (col_flag == true) { 
                for (int i = 0; i < R; i++) { 
                    mat[i][0] = 1; 
                } 
            } 
        }
        Time Complexity: O(M*N)
        Auxiliary Space: O(1)
