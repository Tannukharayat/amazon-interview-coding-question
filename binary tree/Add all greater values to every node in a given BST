*Given a Binary Search Tree (BST), modify it so that all greater values in the given BST are added to every node. For example, consider the following BST.
              50
           /      \
         30        70
        /   \      /  \
      20    40    60   80 

The above tree should be modified to following 

              260
           /      \
         330        150
        /   \       /  \
      350   300    210   80**
      
void modifyBSTUtil(Node *root, int *sum)  
{  
    // Base Case  
    if (root == NULL) return;  
  
    // Recur for right subtree  
    modifyBSTUtil(root->right, sum);  
  
    // Now *sum has sum of nodes in right subtree, add  
    // root->data to sum and update root->data  
    *sum = *sum + root->data;  
    root->data = *sum;  
  
    // Recur for left subtree  
    modifyBSTUtil(root->left, sum);  
}  
  
// A wrapper over modifyBSTUtil()  
void modifyBST(Node *root)  
{  
    int sum = 0;  
    modifyBSTUtil(root, &sum);  
}  
