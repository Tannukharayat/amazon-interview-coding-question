Given two number x and n, find n-th root of x.
Examples:

Input : 5 2
Output : 2.2360679768025875

Input :  x = 5, n = 3
Output : 1.70997594668

    
    void findNthRoot(double x, int n) 
{ 
  
// Initialize boundary values  
double low, high; 
if (x >= 0 and x <= 1) 
{ 
    low = x; 
    high = 1; 
} 
else
{ 
    low = 1; 
    high = x;  
}  
  
// used for taking approximations  
// of the answer  
double epsilon = 0.00000001; 
  
// Do binary search  
double guess = (low + high) / 2; 
while (abs((pow(guess, n)) - x) >= epsilon) 
{ 
    if (pow(guess, n) > x) 
    { 
        high = guess ; 
    }  
    else
    { 
        low = guess ; 
    } 
    guess = (low + high) / 2; 
} 
  
cout << fixed << setprecision(16)  
     << guess; 
}      
  
// Driver code  
int main() 
{ 
    double x = 5; 
    int n = 2; 
    findNthRoot(x, n) ; 
} 
  
// This code is contributed 
// by Subhadeep 
Output:
2.2360679768025875
