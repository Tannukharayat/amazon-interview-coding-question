**There is one meeting room in a firm. There are N meetings in the form of (S[i], F[i]) where S[i] is start time of meeting i and F[i] 
is finish time of meeting i.
What is the maximum number of meetings that can be accommodated in the meeting room? **

    bool compare(pair<pair<int, int>, int >v1, pair<pair<int, int>, int > v2)
    {
        if(v1.first.second<v2.first.second)
        return 1;
        return 0;
    }
    int main() 
    {
      int t ;
      cin >> t ;
      for( int i = 0 ; i < t ; i++ )
      {
          int n ;
          cin >> n ;
          int s[n], f[n];
          for(int j = 0 ;  j < n ; j++ )
          {
              cin>>s[j];
          }
          vector<pair<pair<int,int> , int> > v;
          for(int j = 0 ;  j < n ; j++ )
          {
              cin>>f[j];
              v.push_back({{s[j],f[j]},j+1});
          }
          sort(v.begin(), v.end(),compare);
          vector<int> v1;
          v1.push_back(v[0].second);
          int ini=0;
          for(int j = 1 ; j < n ; j++ )
          {
              if(v[j].first.first>v[ini].first.second)
              {
                  v1.push_back(v[j].second);
                  ini = j;
              }
          }
          for(int j= 0 ; j < v1.size() ; j++)
          {
              cout<<v1[j]<<" ";
          }cout<<endl;
      }
      return 0;
    }
