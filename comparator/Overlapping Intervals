**Given a collection of Intervals, the task is to merge all of the overlapping Intervals.

For example: Given intervals: [1,3], [2,6], [8,10], [15,18], we have only two overlapping intervals here, [1,3] and [2,6]. Therefore, we 
will merge these two and return [1,6], [8,10], [15,18].**


    bool comp(pair<int,int> p1, pair<int,int> p2)
    {
        if(p1.first<p2.first)
        return 1;
        else if(p1.first>p2.first)
        return 0;
        else if(p1.first==p2.first)
        {
            if(p1.second<p2.second)
            return 1;
             return 0;
        }
    }
    vector<pair<int,int>> overlappedInterval(vector<pair<int,int>> vec, int n) {
        sort(vec.begin(), vec.end() , comp);
        vector<pair<int,int> >v;
        int i = 0;
        while(i<vec.size())
        {
            int x = vec[i].first, y=vec[i].second;
            while(i+1<vec.size()&&vec[i+1].first<=y)
            {
                y=max(vec[i+1].second,y);
                i++;
            }
            v.push_back({x,y});
            i++;
        }
       return v;
    }
